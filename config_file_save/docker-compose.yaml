version: '3.3'

services:
  traefik:
    restart: always
    image: traefik:v2.5.5
    ports:
    - "443:443"
    - "80:80"
    volumes:
    - /home/pi/server/traefik/traefik.toml:/etc/traefik/traefik.toml
    - /home/pi/server/traefik/acme.json:/acme.json
    - /home/pi/server/traefik/logs:/srv/docker/traefik/logs
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - myhome
    labels:
    # Explicitly tell Traefik to expose this container    
    - "traefik.enable=true"
    - "traefik.http.routers.api.rule=Host(`traefik.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.api.service=api@internal"
    - "traefik.http.routers.api.entrypoints=http"
    - "traefik.http.routers.api.middlewares=auth"
    - "traefik.http.middlewares.auth.basicauth.users=gviclin:$$apr1$$u/cFSSRw$$lvn14TRvKCJx886eC01uz."
    - "traefik.http.routers.api.tls=true"
    - "traefik.http.routers.api.tls.certresolver=gviclin"


    
  influxdb_2:
    restart: always
    image: influxdb:latest
    networks:
      myhome:
        ipv4_address: 172.44.0.11
    ports:
    - "8087:8086"
    volumes:
    - /home/pi/server/influxdb_2:/var/lib/influxdb2
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.influxdb.rule=Host(`influxdb.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.influxdb.entrypoints=https"
    - "traefik.http.routers.influxdb.tls=true"
    - "traefik.http.routers.influxdb.tls.certresolver=gviclin"
    - "traefik.http.services.influxdb.loadbalancer.server.port=8086"

  grafana:
    restart: always
    image: grafana/grafana-enterprise
    depends_on:
    - influxdb_2
 #   - ha
    user: "1000"
 #   user: "$UID:$GID"
    volumes:
    - /home/pi/server/grafana:/var/lib/grafana
#    - /home/pi/server/grafana_etc:/etc/grafana
    privileged: true
    networks:
      myhome:
        ipv4_address: 172.44.0.15
    ports:
    - "3000:3000"
    environment:
    - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.grafana2.rule=Host(`grafana.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.grafana2.entrypoints=https"
    - "traefik.http.routers.grafana2.tls=true"
    - "traefik.http.routers.grafana2.tls.certresolver=gviclin"
    - "traefik.http.services.grafana2.loadbalancer.server.port=3000"
    
    
  ha:
    restart: always
    image: homeassistant/home-assistant:latest
    #image: ghcr.io/home-assistant/raspberrypi4-homeassistant:stable
    networks:
    - myhome
    depends_on:
    - influxdb_2
    - mosquitto
    environment:
    - TZ=Europe/Paris
    volumes:
    - /home/pi/server/ha:/config
    - /media/ha:/media 
    devices:
    - "/dev/serial0:/dev/serial0"
    privileged: true
    ports:
      - 8123:8123
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.home.rule=Host(`homeassistant.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.home.entrypoints=https"
    - "traefik.http.routers.home.tls=true"
    - "traefik.http.routers.home.tls.certresolver=gviclin"
    - "traefik.http.services.home.loadbalancer.server.port=8123"
    
  
    
  portainer:
    image: portainer/portainer:linux-arm
    restart: always
    command: -H unix:///var/run/docker.sock
    networks:
    - myhome
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/pi/server/portainer:/data
    environment:
      TZ: "Europe/Paris"
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.portainer.rule=Host(`portainer.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.portainer.entrypoints=https"
    - "traefik.http.routers.portainer.tls=true"
    - "traefik.http.routers.portainer.tls.certresolver=gviclin"
    - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    
  django:
    build: ../strava/buildProd
    command: gunicorn stravaProject.wsgi:application --workers 2 --threads 2 --bind 0.0.0.0:8000
    restart: always
#--log-level=debug
    networks:
      myhome:
        ipv4_address: 172.44.0.13
    volumes:
      - ../strava/stravaProject:/app
    ports:
      - "8000:8000"
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.django.rule=Host(`strava.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.django.entrypoints=https"
    - "traefik.http.routers.django.tls=true"
    - "traefik.http.routers.django.tls.certresolver=gviclin"
    - "traefik.http.services.django.loadbalancer.server.port=8000"
    
  nginx:  # nginx to serve static files
    image: nginx:latest
    #container_name: nginx
    restart: always
    networks:
      myhome:
        ipv4_address: 172.44.0.14
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../strava/stravaProject/static:/static
    ports:
      - "8001:8001"
    labels:  # route defined to handle specific rule and enabling tls certresolver
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.nginx.rule=Host(`strava.mypersonalstats.duckdns.org`) && PathPrefix(`/static`)" 
    - "traefik.http.routers.nginx.entrypoints=https"
    - "traefik.http.routers.nginx.tls=true"
    - "traefik.http.routers.nginx.tls.certresolver=gviclin"
    - "traefik.http.services.nginx.loadbalancer.server.port=8001"
    
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      myhome:
        ipv4_address: 172.44.0.16
    ports:
      - "1883:1883/tcp"
    environment:
      - TZ=Europe/Brussels
    volumes:
      - /home/pi/server/mosquitto/config:/mosquitto/config
      - /home/pi/server/mosquitto/data:/mosquitto/data
      - /home/pi/server/mosquitto/log:/mosquitto/log
    #connect to the terminal of the container to run some commands :
    stdin_open: true
    tty: true    
    
    
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    networks:
      myhome:
        ipv4_address: 172.44.0.17
    ports:
      - "8099:8099/tcp"
    environment:
      - TZ=Europe/Brussels
    volumes:
      - /home/pi/server/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.zigbee2mqtt.rule=Host(`z2mqtt.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.zigbee2mqtt.entrypoints=https"
    - "traefik.http.routers.zigbee2mqtt.tls=true"
    - "traefik.http.routers.zigbee2mqtt.tls.certresolver=gviclin"
    - "traefik.http.services.zigbee2mqtt.loadbalancer.server.port=8099"
    
  hass-configurator:
    image: "causticlab/hass-configurator-docker:arm" 
    restart: always
    ports:
      - "3218:3218/tcp"   
    volumes:
      - "./HassConfigurator:/config"
      - "./ha:/hass-config" #Chemin absolu (relatif possible) vers le dossier de configuration de l'instance HA
    environment:
      - HC_BASEPATH=/hass-config #<-- Le dossier au démarrage de l'application web (arbo du container)
      - HC_ENFORCE_BASEPATH=true #<-- Limiter la visualisation à l'arborescence (impossible de remonter plus haut que le chemin du volume pointant sur HC_BASEPATH
      - HC_DIRSFIRST=true #<-- Afficher les dossiers en premier (plutôt que mélanger avec les fichiers par ordre alphabétique)
    networks:
        myhome:
            ipv4_address: 172.44.0.18
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=myhome"
    - "traefik.http.routers.hass-configurator.rule=Host(`files.mypersonalstats.duckdns.org`)"
    - "traefik.http.routers.hass-configurator.entrypoints=https"
    - "traefik.http.routers.hass-configurator.tls=true"
    - "traefik.http.routers.hass-configurator.tls.certresolver=gviclin"
    - "traefik.http.services.hass-configurator.loadbalancer.server.port=3218"
       
networks:
    myhome:
        driver: bridge
        external: false
        ipam:
         config:
           - subnet: 172.44.0.0/16
             gateway: 172.44.0.1


